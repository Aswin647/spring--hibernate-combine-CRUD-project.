// below is the code of DAO//



package aswin.dao;

import java.util.List;

import aswin.entity.Customer;


public interface CustomerDAO {
	
	public List<Customer> getCustomers();

	public void saveCustomer(Customer theCustomer);

	public Customer getCustomer(int theId);

	public void deleteCustomer(int theId);
		

}

// BELOW IS THE CODE OF THE DAO implementation


package aswin.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import aswin.entity.Customer;

@Repository
public class CustomerDAOimpl implements CustomerDAO {
	
// need to inject the session factory
	
@Autowired	
private SessionFactory sessionFactory;	
	
	
	@Override
	public List<Customer> getCustomers() {
		
		// get the current hibernate session
		Session currentSession= sessionFactory.getCurrentSession();
		
		//create a query
		Query<Customer> theQuery = 
				currentSession.createQuery("from Customer order by the lastName", Customer.class);
		
		
		//execute query and get result list
		List<Customer> customers = theQuery.getResultList();
		
		
		// return the result
		
		return customers;
	}


	@Override
	public void saveCustomer(Customer theCustomer) {
		
		
		Session currentSession=sessionFactory.getCurrentSession();
		
		currentSession.saveOrUpdate(theCustomer);
		
	}


	@Override
	public Customer getCustomer(int theId) {
		Session currentSession=sessionFactory.getCurrentSession();
		
		Customer thecustomer=currentSession.get(Customer.class,theId);
		
		
		return thecustomer;
	}
